import { PropType } from 'vue';
import type { Step, StepControls } from './types';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: NumberConstructor;
        required: true;
    };
    step: {
        type: PropType<Step>;
        required: true;
    };
    color: {
        type: StringConstructor;
        required: true;
    };
    stepIndex: {
        type: NumberConstructor;
        required: true;
    };
    navigationDisabled: {
        type: BooleanConstructor;
        required: true;
    };
    nextDisabled: {
        type: BooleanConstructor;
        required: true;
    };
    stepControls: {
        type: PropType<StepControls>;
        required: true;
    };
}, {
    isNextStepDisabled: (index: number) => boolean;
    stepperColor: string;
    getColor: (prop?: string | undefined, defaultColor?: string | undefined, preferVariables?: boolean | undefined) => string;
    computedClass: {
        [x: `va-stepper__step-button--${string}`]: boolean;
    } & {
        readonly asObject: import("vue").ComputedRef<{
            [x: `va-stepper__step-button--${string}`]: boolean;
        }>;
        readonly asArray: import("vue").ComputedRef<`va-stepper__step-button--${string}`[]>;
        readonly asString: import("vue").ComputedRef<string>;
    };
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:modelValue"[], "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: NumberConstructor;
        required: true;
    };
    step: {
        type: PropType<Step>;
        required: true;
    };
    color: {
        type: StringConstructor;
        required: true;
    };
    stepIndex: {
        type: NumberConstructor;
        required: true;
    };
    navigationDisabled: {
        type: BooleanConstructor;
        required: true;
    };
    nextDisabled: {
        type: BooleanConstructor;
        required: true;
    };
    stepControls: {
        type: PropType<StepControls>;
        required: true;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {}>;
export default _default;

import { defineComponent, useCssVars, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, createBlock, Fragment, createTextVNode, toDisplayString } from "vue";
import { V as VaIcon } from "../va-icon/index.mjs";
import { u as useBem } from "../../composables/useBem.mjs";
import { u as useColors } from "../../composables/useColors.mjs";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
var VaStepperStepButton_vue_vue_type_style_index_0_lang = "";
const __default__ = defineComponent({
  name: "VaStepperStepButton",
  components: { VaIcon },
  props: {
    modelValue: { type: Number, required: true },
    step: {
      type: Object,
      required: true
    },
    color: { type: String, required: true },
    stepIndex: { type: Number, required: true },
    navigationDisabled: { type: Boolean, required: true },
    nextDisabled: { type: Boolean, required: true },
    stepControls: { type: Object, required: true }
  },
  emits: ["update:modelValue"],
  setup(props) {
    const { getColor } = useColors();
    const stepperColor = getColor(props.color);
    const isNextStepDisabled = (index) => props.nextDisabled && index > props.modelValue;
    const computedClass = useBem("va-stepper__step-button", () => ({
      active: props.modelValue >= props.stepIndex,
      disabled: props.step.disabled || isNextStepDisabled(props.stepIndex),
      "navigation-disabled": props.navigationDisabled
    }));
    return {
      isNextStepDisabled,
      stepperColor,
      getColor,
      computedClass
    };
  }
});
const __injectCSSVars__ = () => {
  useCssVars((_ctx) => ({
    "13fabefd": _ctx.stepperColor
  }));
};
const __setup__ = __default__.setup;
__default__.setup = __setup__ ? (props, ctx) => {
  __injectCSSVars__();
  return __setup__(props, ctx);
} : __injectCSSVars__;
const _sfc_main = __default__;
const _hoisted_1 = { class: "va-stepper__step-button__icon" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_icon = resolveComponent("va-icon");
  return openBlock(), createElementBlock("li", {
    class: normalizeClass(["va-stepper__step-button", _ctx.computedClass]),
    onClick: _cache[0] || (_cache[0] = ($event) => !_ctx.$props.navigationDisabled && _ctx.$props.stepControls.setStep(_ctx.$props.stepIndex))
  }, [
    createElementVNode("div", _hoisted_1, [
      _ctx.step.icon ? (openBlock(), createBlock(_component_va_icon, {
        key: 0,
        name: _ctx.step.icon,
        size: "1.3rem"
      }, null, 8, ["name"])) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
        createTextVNode(toDisplayString(_ctx.$props.stepIndex + 1), 1)
      ], 64))
    ]),
    createTextVNode(" " + toDisplayString(_ctx.step.label), 1)
  ], 2);
}
var VaStepperStepButton = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { VaStepperStepButton as V };
//# sourceMappingURL=VaStepperStepButton.mjs.map

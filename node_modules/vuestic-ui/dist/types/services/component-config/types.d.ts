import type { VuesticComponentsMap } from '../vue-plugin';
import type { VNodeProps, AllowedComponentProps } from 'vue';
export declare type VuesticComponentName = keyof VuesticComponentsMap;
export declare type VueDefaultPropNames = keyof (VNodeProps & AllowedComponentProps) | `on${string}`;
export declare type Props = {
    [propName: string]: any;
};
export declare type Presets = {
    [componentName in VuesticComponentName]?: {
        [presetName: string]: Props;
    };
};
export declare type PropTypes<C> = C extends {
    new (): {
        $props: infer Props;
    };
} ? Omit<Props, VueDefaultPropNames> : never;
export declare type ComponentConfig = Partial<{
    [componentName in VuesticComponentName]: {
        [key in keyof PropTypes<VuesticComponentsMap[componentName]>]: PropTypes<VuesticComponentsMap[componentName]>[key];
    };
} & {
    all: Props;
    presets: Presets;
}>;
export type { DefineComponent as VuesticComponent } from 'vue';

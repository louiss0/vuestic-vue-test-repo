import { defineComponent, toRef, computed, openBlock, createElementBlock, normalizeStyle, renderSlot } from "vue";
import { u as useColors } from "../../../../composables/useColors.js";
import { u as useTextColor } from "../../../../composables/useTextColor.js";
import { _ as _export_sfc } from "../../../../../plugin-vue_export-helper.js";
var _style_0 = ":root,\n:host {\n  --va-dropdown-content-padding: 0.5rem;\n  --va-dropdown-content-box-shadow: var(--va-box-shadow);\n  --va-dropdown-content-border-radius: 4px;\n}\n.va-dropdown__content {\n  padding: var(--va-dropdown-content-padding);\n  box-shadow: var(--va-dropdown-content-box-shadow);\n  border-radius: var(--va-dropdown-content-border-radius);\n  font-family: var(--va-font-family);\n}";
const _sfc_main = defineComponent({
  name: "VaDropdownContent",
  props: {
    noPadding: { type: Boolean, default: false },
    background: { type: String, default: "background-secondary" },
    textColor: { type: String }
  },
  setup(props) {
    const { getColor } = useColors();
    const { textColorComputed } = useTextColor(toRef(props, "background"));
    const computedStyle = computed(() => ({
      background: getColor(props.background, void 0, true),
      color: textColorComputed.value,
      padding: props.noPadding ? 0 : void 0
    }));
    return { computedStyle };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    class: "va-dropdown__content",
    style: normalizeStyle(_ctx.computedStyle),
    role: "listbox"
  }, [
    renderSlot(_ctx.$slots, "default")
  ], 4);
}
var _VaDropdownContent = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [_style_0]]]);
export { _VaDropdownContent as _ };
//# sourceMappingURL=VaDropdownContent.js.map

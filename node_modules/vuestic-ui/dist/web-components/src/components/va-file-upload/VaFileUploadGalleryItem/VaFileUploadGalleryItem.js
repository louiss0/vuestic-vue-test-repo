import { defineComponent, ref, computed, onMounted, watch, toRef, resolveComponent, openBlock, createBlock, normalizeClass, withCtx, createVNode, createElementBlock, createCommentVNode, createElementVNode, normalizeStyle, toDisplayString } from "vue";
import { d as colorToRgba } from "../../../services/color/utils.js";
import { u as useBem } from "../../../composables/useBem.js";
import { u as useFocus } from "../../../composables/useFocus.js";
import { u as useStrictInject } from "../../../composables/useStrictInject.js";
import { u as useTextColor } from "../../../composables/useTextColor.js";
import { u as useTranslation } from "../../../composables/useTranslation.js";
import { V as VaFileUploadKey } from "../types.js";
import { V as VaButton } from "../../va-button/index.js";
import { V as VaListItem, a as VaListItemSection } from "../../va-list/index.js";
import { V as VaFileUploadUndo } from "../VaFileUploadUndo/index.js";
import { _ as _export_sfc } from "../../../../plugin-vue_export-helper.js";
var _style_0 = ":root,\n:host {\n  --va-file-upload-gallery-item-card-box-shadow: var(--va-box-shadow);\n  --va-file-upload-gallery-item-text: var(--va-text-primary);\n  --va-file-upload-gallery-item-text-hover: var(--va-text-inverted);\n}\n.va-file-upload-gallery-item {\n  display: flex;\n  position: relative;\n  margin-bottom: 1rem;\n  margin-right: 0.5rem;\n  flex-basis: calc(14.2857% - 0.5rem);\n  max-width: calc(14.2857% - 0.5rem);\n  min-width: 8.5714rem;\n  border-radius: 0.375rem;\n  overflow: hidden;\n  width: 100%;\n  align-items: stretch;\n}\n@media (max-width: 991.98px) {\n.va-file-upload-gallery-item {\n    flex-basis: calc(16.667% - 0.5rem);\n    max-width: calc(16.667% - 0.5rem);\n}\n}\n@media (max-width: 767.98px) {\n.va-file-upload-gallery-item {\n    flex-basis: calc(20% - 0.5rem);\n    max-width: calc(20% - 0.5rem);\n}\n}\n@media (max-width: 575.98px) {\n.va-file-upload-gallery-item {\n    flex-basis: calc(50% - 0.5rem);\n    max-width: calc(50% - 0.5rem);\n}\n}\n.va-file-upload-gallery-item:last-of-type {\n  margin-right: 0;\n}\n.va-file-upload-gallery-item:hover .va-file-upload-gallery-item__overlay, .va-file-upload-gallery-item:focus .va-file-upload-gallery-item__overlay, .va-file-upload-gallery-item--focused .va-file-upload-gallery-item__overlay {\n  z-index: 3;\n  opacity: 1;\n}\n.va-file-upload-gallery-item:hover .va-file-upload-gallery-item__name, .va-file-upload-gallery-item:focus .va-file-upload-gallery-item__name, .va-file-upload-gallery-item--focused .va-file-upload-gallery-item__name {\n  color: var(--va-file-upload-gallery-item-text-hover);\n}\n.va-file-upload-gallery-item__overlay {\n  display: flex;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  flex-direction: column;\n  padding: 0.5rem;\n  z-index: -1;\n  opacity: 0;\n}\n.va-file-upload-gallery-item__overlay-background {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: -1;\n}\n.va-file-upload-gallery-item__image {\n  width: 100%;\n  box-shadow: var(--va-box-shadow);\n  object-fit: cover;\n  z-index: 1;\n}\n.va-file-upload-gallery-item__name {\n  color: var(--va-file-upload-gallery-item-text);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 0.875rem;\n}\n.va-file-upload-gallery-item__delete {\n  cursor: pointer;\n  font-size: 1.5rem;\n  margin-top: auto;\n}\n.va-file-upload-gallery-item--not-image .va-file-upload-gallery-item__overlay {\n  display: flex;\n}\n.va-file-upload-gallery-item--undo .va-list-item__inner {\n  display: flex;\n  align-items: flex-start;\n  position: relative;\n}\n.va-file-upload-gallery-item--undo .va-list-item-section {\n  height: inherit;\n  padding: 0;\n}\n.va-file-upload-gallery-item--undo .va-file-upload-undo {\n  flex: 1;\n}";
const INJECTION_ERROR_MESSAGE = "The VaFileUploadGalleryItem component should be used in the context of VaFileUpload component";
const _sfc_main = defineComponent({
  name: "VaFileUploadGalleryItem",
  components: {
    VaFileUploadUndo,
    VaButton,
    VaListItem,
    VaListItemSection
  },
  emits: ["remove"],
  props: {
    file: { type: Object, default: null },
    color: { type: String, default: "success" }
  },
  setup(props, { emit }) {
    const {
      undo,
      disabled,
      undoDuration
    } = useStrictInject(VaFileUploadKey, INJECTION_ERROR_MESSAGE);
    const { isFocused, onFocus, onBlur } = useFocus();
    const previewImage = ref("");
    const removed = ref(false);
    const overlayStylesComputed = computed(() => ({
      backgroundColor: colorToRgba(props.color, 0.7)
    }));
    const classesComputed = useBem("va-file-upload-gallery-item", () => ({
      notImage: !previewImage.value,
      focused: isFocused.value,
      undo: removed.value
    }));
    const removeImage = () => {
      var _a;
      if (undo.value) {
        removed.value = true;
        setTimeout(() => {
          if (!removed.value) {
            return;
          }
          emit("remove");
          removed.value = false;
        }, (_a = undoDuration.value) != null ? _a : 0);
      } else {
        emit("remove");
        removed.value = false;
      }
    };
    const recoverImage = () => {
      removed.value = false;
    };
    const convertToImg = () => {
      if (!props.file.name || !props.file.image) {
        return;
      }
      if (props.file.image.url) {
        previewImage.value = props.file.image.url;
      } else if (props.file.image instanceof File) {
        const reader = new FileReader();
        reader.readAsDataURL(props.file.image);
        reader.onload = (e) => {
          var _a, _b;
          if (((_a = e.target) == null ? void 0 : _a.result).includes("image")) {
            previewImage.value = (_b = e.target) == null ? void 0 : _b.result;
          }
        };
      }
    };
    onMounted(convertToImg);
    watch(() => props.file, convertToImg);
    return {
      ...useTranslation(),
      undo,
      ...useTextColor(toRef(props, "color")),
      removed,
      disabled,
      isFocused,
      previewImage,
      classesComputed,
      overlayStylesComputed,
      onBlur,
      onFocus,
      removeImage,
      recoverImage
    };
  }
});
const _hoisted_1 = ["src", "alt"];
const _hoisted_2 = { class: "va-file-upload-gallery-item__overlay" };
const _hoisted_3 = ["title"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_file_upload_undo = resolveComponent("va-file-upload-undo");
  const _component_va_list_item_section = resolveComponent("va-list-item-section");
  const _component_va_button = resolveComponent("va-button");
  const _component_va_list_item = resolveComponent("va-list-item");
  return openBlock(), createBlock(_component_va_list_item, {
    class: normalizeClass(["va-file-upload-gallery-item", _ctx.classesComputed]),
    tabindex: "-1",
    disabled: _ctx.disabled,
    "aria-disabled": _ctx.disabled,
    onFocus: _ctx.onFocus,
    onBlur: _ctx.onBlur
  }, {
    default: withCtx(() => [
      _ctx.removed && _ctx.undo ? (openBlock(), createBlock(_component_va_list_item_section, { key: 0 }, {
        default: withCtx(() => [
          createVNode(_component_va_file_upload_undo, {
            vertical: "",
            onRecover: _ctx.recoverImage
          }, null, 8, ["onRecover"])
        ]),
        _: 1
      })) : (openBlock(), createBlock(_component_va_list_item_section, { key: 1 }, {
        default: withCtx(() => [
          _ctx.previewImage ? (openBlock(), createElementBlock("img", {
            key: 0,
            src: _ctx.previewImage,
            alt: _ctx.file.name || "",
            class: "va-file-upload-gallery-item__image"
          }, null, 8, _hoisted_1)) : createCommentVNode("", true),
          createElementVNode("div", _hoisted_2, [
            createElementVNode("div", {
              class: "va-file-upload-gallery-item__overlay-background",
              style: normalizeStyle(_ctx.overlayStylesComputed)
            }, null, 4),
            _ctx.file && _ctx.file.name ? (openBlock(), createElementBlock("div", {
              key: 0,
              class: "va-file-upload-gallery-item__name",
              title: _ctx.file.name,
              style: normalizeStyle({ color: _ctx.textColorComputed })
            }, toDisplayString(_ctx.file.name), 13, _hoisted_3)) : createCommentVNode("", true),
            !_ctx.disabled ? (openBlock(), createBlock(_component_va_button, {
              key: 1,
              flat: "",
              color: "danger",
              icon: "va-delete",
              class: "va-file-upload-gallery-item__delete",
              "aria-label": _ctx.t("removeFile"),
              onClick: _ctx.removeImage,
              onFocus: _ctx.onFocus,
              onBlur: _ctx.onBlur
            }, null, 8, ["aria-label", "onClick", "onFocus", "onBlur"])) : createCommentVNode("", true)
          ])
        ]),
        _: 1
      }))
    ]),
    _: 1
  }, 8, ["class", "disabled", "aria-disabled", "onFocus", "onBlur"]);
}
var _VaFileUploadGalleryItem = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [...(      VaFileUploadUndo.styles || []), ...(    VaButton.styles || []), ...(    VaListItem.styles || []), ...(    VaListItemSection  .styles || []), _style_0]]]);
export { _VaFileUploadGalleryItem as _ };
//# sourceMappingURL=VaFileUploadGalleryItem.js.map

import { computed } from "vue";
import { u as useGlobalConfig } from "../services/global-config/global-config.mjs";
import { w as warn } from "../utils/console.mjs";
const applyI18nTemplate = (key, values) => {
  if (!values) {
    return key;
  }
  Object.keys(values).forEach((valueKey) => {
    key = key.replace(`{${valueKey}}`, String(values[valueKey]));
  });
  return key;
};
const useTranslation = () => {
  const { globalConfig } = useGlobalConfig();
  const config = computed(() => globalConfig.value.i18n);
  return {
    tp: (key) => {
      if (!key) {
        return void 0;
      }
      if (key.startsWith("$t:")) {
        return config.value[key.slice(3)] || key;
      }
      return key;
    },
    t(key, values) {
      const translated = config.value[key];
      if (!translated) {
        warn(`${key} not found in VuesticUI i18n config`);
        return key;
      }
      return applyI18nTemplate(translated, values) || key;
    }
  };
};
export { useTranslation as u };
//# sourceMappingURL=useTranslation.mjs.map

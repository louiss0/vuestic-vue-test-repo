import { defineComponent, computed, openBlock, createElementBlock, normalizeStyle, createElementVNode, renderSlot, createCommentVNode } from "vue";
import { u as useColors } from "../../composables/useColors.js";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";
import { u as useFixedBarProps, a as useFixedBar } from "../../composables/useFixedBar.js";
import { s as setupScroll } from "../../composables/useScroll.js";
import { u as useTextColor } from "../../composables/useTextColor.js";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
var VaNavbar_vue_vue_type_style_index_0_lang = "";
const _sfc_main = defineComponent({
  name: "VaNavbar",
  props: {
    ...useFixedBarProps,
    ...useComponentPresetProp,
    color: { type: String, default: "background-secondary" },
    textColor: { type: String },
    shape: { type: Boolean, default: false }
  },
  setup(props) {
    const { scrollRoot, isScrolledDown } = setupScroll(props.fixed);
    const { fixedBarStyleComputed } = useFixedBar(props, isScrolledDown);
    const { getColor, shiftHSLAColor } = useColors();
    const { textColorComputed } = useTextColor();
    const color = computed(() => getColor(props.color));
    const shapeStyleComputed = computed(() => ({
      borderTopColor: shiftHSLAColor(color.value, { h: -1, s: -11, l: 10 })
    }));
    const computedStyle = computed(() => ({
      ...fixedBarStyleComputed.value,
      backgroundColor: color.value,
      color: textColorComputed.value,
      fill: textColorComputed.value
    }));
    return {
      scrollRoot,
      computedStyle,
      shapeStyleComputed
    };
  }
});
const _hoisted_1 = { class: "va-navbar__left" };
const _hoisted_2 = { class: "va-navbar__center" };
const _hoisted_3 = { class: "va-navbar__right" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("header", {
    ref: "scrollRoot",
    class: "va-navbar",
    style: normalizeStyle(_ctx.computedStyle)
  }, [
    createElementVNode("div", _hoisted_1, [
      renderSlot(_ctx.$slots, "left")
    ]),
    createElementVNode("div", _hoisted_2, [
      renderSlot(_ctx.$slots, "default")
    ]),
    createElementVNode("div", _hoisted_3, [
      renderSlot(_ctx.$slots, "right")
    ]),
    _ctx.shape ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: "va-navbar__background-shape",
      style: normalizeStyle(_ctx.shapeStyleComputed)
    }, null, 4)) : createCommentVNode("", true)
  ], 4);
}
var _VaNavbar = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaNavbar as _ };

import './VaNavbar.css';
//# sourceMappingURL=VaNavbar.js.map

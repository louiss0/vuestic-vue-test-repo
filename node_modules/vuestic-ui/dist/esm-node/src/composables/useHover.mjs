import { ref, watch, onMounted } from "vue";
import { u as useHTMLElement } from "./useHTMLElement.mjs";
import { u as useEvent } from "./useEvent.mjs";
function useHover(el, disabled) {
  const isHovered = ref(false);
  const onMouseEnter = () => {
    isHovered.value = true;
  };
  const onMouseLeave = () => {
    isHovered.value = false;
  };
  disabled && watch(disabled, (v) => {
    if (v) {
      isHovered.value = false;
    }
  });
  onMounted(() => {
    if (!(el == null ? void 0 : el.value)) {
      return;
    }
    const getTarget = useHTMLElement(el);
    useEvent("mouseenter", onMouseEnter, getTarget);
    useEvent("mouseleave", onMouseLeave, getTarget);
  });
  return { isHovered, onMouseEnter, onMouseLeave };
}
export { useHover as u };
//# sourceMappingURL=useHover.mjs.map

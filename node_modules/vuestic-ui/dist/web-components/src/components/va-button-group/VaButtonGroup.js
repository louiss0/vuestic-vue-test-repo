import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, withCtx, renderSlot } from "vue";
import { e as extractComponentProps } from "../../utils/component-options/extract-component-options.js";
import { o as omit_1 } from "../../../vendor.js";
import { u as useBem } from "../../composables/useBem.js";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";
import { V as VaConfig } from "../va-config/VaConfig.js";
import { V as VaButton } from "../va-button/index.js";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
var _style_0 = ':root,\n:host {\n  --va-button-group-display: flex;\n  --va-button-group-justify-content: stretch;\n  --va-button-group-border-radius: 999px;\n  --va-button-group-gap: 0.25rem;\n  /* Button */\n  --va-button-group-button-margin: 0;\n  --va-button-group-button-width: auto;\n  --va-button-group-button-padding: 0.25rem;\n}\n.va-button-group {\n  display: var(--va-button-group-display);\n  justify-content: var(--va-button-group-justify-content);\n  border-radius: var(--va-button-group-border-radius);\n  font-family: var(--va-font-family);\n  width: -moz-max-content;\n  width: max-content;\n}\n.va-button-group--grow {\n  width: 100%;\n  --va-button-group-button-width: 100%;\n}\n.va-button-group--square {\n  border-radius: var(--va-button-border-radius);\n}\n.va-button-group--small.va-button-group--square {\n  border-radius: var(--va-button-sm-border-radius);\n}\n.va-button-group--large.va-button-group--square {\n  border-radius: var(--va-button-lg-border-radius);\n}\n.va-button-group .va-button {\n  margin: var(--va-button-group-button-margin);\n  width: var(--va-button-group-button-width);\n  box-shadow: none;\n  outline: none;\n}\n.va-button-group .va-button:focus-visible {\n  outline: none !important;\n}\n.va-button-group .va-button:focus-visible::before {\n  outline: 2px solid var(--va-focus) !important;\n  border-radius: "inherit";\n  outline-offset: -2px;\n}\n.va-button-group > .va-button:last-child {\n  padding-right: var(--va-button-group-button-padding);\n}\n.va-button-group > .va-button:first-child {\n  padding-left: var(--va-button-group-button-padding);\n}\n.va-button-group > .va-button:not(:last-child) {\n  padding-right: var(--va-button-group-gap);\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: 0;\n}\n.va-button-group > .va-button:not(:last-child) .va-button__content {\n  margin-right: 0;\n}\n.va-button-group > .va-button + .va-button {\n  padding-left: var(--va-button-group-gap);\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-left: 0;\n}\n.va-button-group > .va-button + .va-button .va-button__content {\n  margin-left: 0;\n}';
const VaButtonProps = omit_1(extractComponentProps(VaButton), ["block"]);
const _sfc_main = defineComponent({
  name: "VaButtonGroup",
  components: { VaConfig },
  props: {
    ...VaButtonProps,
    ...useComponentPresetProp,
    grow: {
      type: Boolean,
      default: false
    }
  },
  setup: (props) => {
    const buttonConfig = computed(() => ({ VaButton: { ...props } }));
    const computedClass = useBem("va-button-group", () => ({
      square: !props.round,
      grow: props.grow,
      small: props.size === "small",
      large: props.size === "large"
    }));
    return { buttonConfig, computedClass };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_config = resolveComponent("va-config");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(["va-button-group", _ctx.computedClass])
  }, [
    createVNode(_component_va_config, { components: _ctx.buttonConfig }, {
      default: withCtx(() => [
        renderSlot(_ctx.$slots, "default")
      ]),
      _: 3
    }, 8, ["components"])
  ], 2);
}
var _VaButtonGroup = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [...(   VaConfig .styles || []), _style_0]]]);
export { _VaButtonGroup as _ };
//# sourceMappingURL=VaButtonGroup.js.map

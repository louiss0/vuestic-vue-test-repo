import { defineComponent, computed, openBlock, createElementBlock, normalizeStyle, renderSlot } from "vue";
import { u as useColors } from "../../../composables/useColors.js";
import { u as useHover } from "../../../composables/useHover.js";
import { _ as _export_sfc } from "../../../../plugin-vue_export-helper.js";
const _sfc_main = defineComponent({
  name: "VaTimePickerColumnCell",
  setup() {
    const { isHovered, onMouseEnter, onMouseLeave } = useHover();
    const { getTextColor, getColor } = useColors();
    const styleComputed = computed(() => isHovered.value ? {
      color: getColor(getTextColor(getColor("background-secondary"))),
      background: getColor("background-secondary")
    } : void 0);
    return {
      onMouseEnter,
      onMouseLeave,
      styleComputed
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    onMouseenter: _cache[0] || (_cache[0] = (...args) => _ctx.onMouseEnter && _ctx.onMouseEnter(...args)),
    onMouseleave: _cache[1] || (_cache[1] = (...args) => _ctx.onMouseLeave && _ctx.onMouseLeave(...args)),
    style: normalizeStyle(_ctx.styleComputed)
  }, [
    renderSlot(_ctx.$slots, "default")
  ], 36);
}
var VaTimePickerColumnCell = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { VaTimePickerColumnCell as V };
//# sourceMappingURL=VaTimePickerColumnCell.js.map

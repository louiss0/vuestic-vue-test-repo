{"version":3,"file":"usePressed.mjs","sources":["../../../../src/composables/usePressed.ts"],"sourcesContent":["import { ref, Ref, onMounted } from 'vue'\n\nimport { useHTMLElement, useEvent } from './'\n\nexport function usePressed (el?: Ref<HTMLElement | undefined>) {\n  const isPressed = ref(false)\n\n  const onMouseDown = () => { isPressed.value = true }\n  const onMouseUp = () => { isPressed.value = false }\n\n  onMounted(() => {\n    if (!el?.value) { return }\n    const getTarget = useHTMLElement(el as Ref<HTMLElement>)\n    useEvent('mousedown', onMouseDown, getTarget)\n    useEvent(['mouseup', 'mouseleave'], onMouseUp, getTarget)\n  })\n\n  return { isPressed, onMouseDown, onMouseUp }\n}\n"],"names":[],"mappings":";;;;;;;;;AAIO,SAAS,WAAY,IAAmC;AACvD,QAAA,YAAY,IAAI,KAAK;AAE3B,QAAM,cAAc,MAAM;AAAE,cAAU,QAAQ;AAAA,EAAA;AAC9C,QAAM,YAAY,MAAM;AAAE,cAAU,QAAQ;AAAA,EAAA;AAE5C,YAAU,MAAM;AACV,QAAA,EAAC,yBAAI,QAAO;AAAE;AAAA,IAAO;AACnB,UAAA,YAAY,eAAe,EAAsB;AAC9C,aAAA,aAAa,aAAa,SAAS;AAC5C,aAAS,CAAC,WAAW,YAAY,GAAG,WAAW,SAAS;AAAA,EAAA,CACzD;AAEM,SAAA,EAAE,WAAW,aAAa;AACnC;;"}
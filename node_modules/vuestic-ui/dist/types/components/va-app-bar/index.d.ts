export declare const VaAppBar: import("vue").DefineComponent<{
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    target: {
        type: import("vue").PropType<string | HTMLElement>;
        default: string;
    };
    shadowOnScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    shadowColor: {
        type: StringConstructor;
        default: string;
    };
    color: {
        type: StringConstructor;
        default: undefined;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
    hideOnScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    bottom: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    scrollRoot: import("vue").ShallowRef<HTMLElement | undefined>;
    computedStyle: import("vue").ComputedRef<{
        background: string;
        boxShadow: string;
        top: string | undefined;
        transform: string | undefined;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    target: {
        type: import("vue").PropType<string | HTMLElement>;
        default: string;
    };
    shadowOnScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    shadowColor: {
        type: StringConstructor;
        default: string;
    };
    color: {
        type: StringConstructor;
        default: undefined;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
    hideOnScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    bottom: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    fixed: boolean;
    color: string;
    preset: string;
    gradient: boolean;
    target: string | HTMLElement;
    bottom: boolean;
    hideOnScroll: boolean;
    shadowOnScroll: boolean;
    shadowColor: string;
}>;

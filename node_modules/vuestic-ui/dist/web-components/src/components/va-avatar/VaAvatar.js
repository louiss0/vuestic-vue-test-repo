import { defineComponent, computed, ref, watch, useCssVars, resolveComponent, openBlock, createElementBlock, normalizeStyle, createBlock, renderSlot, normalizeProps, mergeProps, createVNode, createCommentVNode } from "vue";
import { u as useColors } from "../../composables/useColors.js";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";
import { u as useLoadingProps } from "../../composables/useLoading.js";
import { u as useSizeProps, a as useSize } from "../../composables/useSize.js";
import { u as useTextColor } from "../../composables/useTextColor.js";
import { e as extractComponentProps } from "../../utils/component-options/extract-component-options.js";
import { f as filterComponentProps } from "../../utils/component-options/filter-props.js";
import { V as VaFallback } from "../va-fallback/index.js";
import { V as VaIcon } from "../va-icon/index.js";
import { V as VaProgressCircle } from "../va-progress-circle/index.js";
import { u as useAvatarProps } from "./hooks/useAvatarProps.js";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
var _style_0 = ":root,\n:host {\n  /* General */\n  --va-avatar-display: inline-flex;\n  --va-avatar-align-items: center;\n  --va-avatar-justify-content: center;\n  --va-avatar-text-align: center;\n  --va-avatar-vertical-align: middle;\n  --va-avatar-position: relative;\n  --va-avatar-line-height: normal;\n  --va-avatar-border-radius: 50%;\n}\n.va-avatar {\n  align-items: var(--va-avatar-align-items);\n  display: var(--va-avatar-display);\n  justify-content: var(--va-avatar-justify-content);\n  line-height: var(--va-avatar-line-height);\n  position: var(--va-avatar-position);\n  text-align: var(--va-avatar-text-align);\n  vertical-align: var(--va-avatar-vertical-align);\n  border-radius: var(--va-avatar-border-radius);\n  font-family: var(--va-font-family);\n  background-color: var(--21bd320a);\n  color: var(--708bde6b);\n  width: var(--71f30a26);\n  min-width: var(--71f30a26);\n  height: var(--71f30a26);\n}\n.va-avatar img,\n.va-avatar svg {\n  border-radius: inherit;\n  display: inline-flex;\n  height: inherit;\n  width: inherit;\n  margin: auto;\n}";
const VaFallbackProps = extractComponentProps(VaFallback);
const __default__ = defineComponent({
  name: "VaAvatar",
  components: { VaIcon, VaProgressCircle, VaFallback },
  props: {
    ...useLoadingProps,
    ...useSizeProps,
    ...useComponentPresetProp,
    ...useAvatarProps,
    ...VaFallbackProps,
    src: { type: String, default: null },
    icon: { type: String, default: "" },
    alt: { type: String, default: "" }
  },
  emits: ["error", "fallback"],
  setup(props, { emit }) {
    const { getColor } = useColors();
    const colorComputed = computed(() => getColor(props.color));
    const backgroundColorComputed = computed(() => {
      if (props.loading || props.src && !hasLoadError.value) {
        return "transparent";
      }
      return colorComputed.value;
    });
    const { sizeComputed, fontSizeComputed } = useSize(props, "VaAvatar");
    const { textColorComputed } = useTextColor();
    const computedStyle = computed(() => ({
      borderRadius: props.square ? 0 : "",
      fontSize: props.fontSize || fontSizeComputed.value
    }));
    const hasLoadError = ref(false);
    const onLoadError = (event) => {
      hasLoadError.value = true;
      emit("error", event);
    };
    watch(() => props.src, () => {
      hasLoadError.value = false;
    });
    const avatarOptions = computed(() => ({
      hasError: hasLoadError.value,
      onError: onLoadError
    }));
    return {
      hasLoadError,
      sizeComputed,
      avatarOptions,
      computedStyle,
      colorComputed,
      textColorComputed,
      backgroundColorComputed,
      VaFallbackProps: filterComponentProps(VaFallbackProps),
      onLoadError
    };
  }
});
const __injectCSSVars__ = () => {
  useCssVars((_ctx) => ({
    "21bd320a": _ctx.backgroundColorComputed,
    "708bde6b": _ctx.textColorComputed,
    "71f30a26": _ctx.sizeComputed
  }));
};
const __setup__ = __default__.setup;
__default__.setup = __setup__ ? (props, ctx) => {
  __injectCSSVars__();
  return __setup__(props, ctx);
} : __injectCSSVars__;
const _sfc_main = __default__;
const _hoisted_1 = ["aria-hidden"];
const _hoisted_2 = ["src", "alt"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_progress_circle = resolveComponent("va-progress-circle");
  const _component_va_fallback = resolveComponent("va-fallback");
  const _component_va_icon = resolveComponent("va-icon");
  return openBlock(), createElementBlock("div", {
    class: "va-avatar",
    style: normalizeStyle(_ctx.computedStyle),
    "aria-hidden": !_ctx.$props.src,
    "aria-live": "polite"
  }, [
    _ctx.$props.loading ? (openBlock(), createBlock(_component_va_progress_circle, {
      key: 0,
      size: _ctx.sizeComputed,
      color: _ctx.colorComputed,
      indeterminate: ""
    }, null, 8, ["size", "color"])) : renderSlot(_ctx.$slots, "default", normalizeProps(mergeProps({ key: 1 }, _ctx.avatarOptions)), () => [
      _ctx.$props.src && !_ctx.hasLoadError ? (openBlock(), createElementBlock("img", {
        key: 0,
        src: _ctx.$props.src,
        alt: _ctx.$props.alt,
        onError: _cache[0] || (_cache[0] = (...args) => _ctx.onLoadError && _ctx.onLoadError(...args))
      }, null, 40, _hoisted_2)) : _ctx.hasLoadError && _ctx.$props.src ? renderSlot(_ctx.$slots, "fallback", { key: 1 }, () => [
        createVNode(_component_va_fallback, mergeProps(_ctx.VaFallbackProps, {
          onFallback: _cache[1] || (_cache[1] = ($event) => _ctx.$emit("fallback"))
        }), null, 16)
      ]) : _ctx.$props.icon ? (openBlock(), createBlock(_component_va_icon, {
        key: 2,
        name: _ctx.$props.icon
      }, null, 8, ["name"])) : createCommentVNode("", true)
    ])
  ], 12, _hoisted_1);
}
var _VaAvatar = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [...(   VaIcon.styles || []), ...( VaProgressCircle.styles || []), ...( VaFallback .styles || []), _style_0]]]);
export { _VaAvatar as _ };
//# sourceMappingURL=VaAvatar.js.map

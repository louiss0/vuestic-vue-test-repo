import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, renderSlot, createCommentVNode } from "vue";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
var _style_0 = ':root,\n:host {\n  --va-divider-display: flex;\n  --va-divider-color: var(--va-background-border);\n  /* Margin around divider, not the same as CSS margin. Should be one value. */\n  --va-divider-margin: 0.5rem;\n  --va-divider-line-width: 1px;\n  --va-divider-border-top-style: solid;\n  --va-divider-border-top-color: var(--va-divider-color);\n  --va-divider-text-font-size: 0.875rem;\n  --va-divider-text-line-height: 0;\n  --va-divider-text-height: 0;\n  --va-divider-text-vertical-align: middle;\n  --va-divider-text-transform: translateY(-50%);\n  /* This one adds offsets at the right and left for the given text orientation only for horizontal divider */\n  --va-divider-text-horizontal-offset: 1.25rem;\n  /* Vertical */\n  --va-divider-vertical-border-top: 0;\n  --va-divider-vertical-border-right-width: 1px;\n  --va-divider-vertical-border-right-style: solid;\n  --va-divider-vertical-border-right-color: var(--va-divider-color);\n  --va-divider-vertical-display: inline-flex;\n  /* Inset */\n  --va-divider-inset-horizontal-margin: 1rem;\n  --va-divider-inset-margin: 0.5rem var(--va-divider-inset-horizontal-margin);\n  /* Dashed */\n  --va-divider-dashed-border-top-style: dashed;\n}\n.va-divider {\n  display: var(--va-divider-display);\n  margin: var(--va-divider-margin) 0;\n  font-family: var(--va-font-family);\n}\n.va-divider--vertical {\n  margin: 0 var(--va-divider-margin);\n  border-top: var(--va-divider-vertical-border-top);\n  border-right-width: var(--va-divider-vertical-border-right-width);\n  border-right-style: var(--va-divider-vertical-border-right-style);\n  border-right-color: var(--va-divider-vertical-border-right-color);\n  display: var(--va-divider-vertical-display);\n  vertical-align: top;\n}\n.va-divider--vertical.va-divider--dashed {\n  border-right-style: dashed;\n}\n.va-divider--inset {\n  margin: var(--va-divider-inset-margin);\n}\n.va-divider--inset.va-divider--vertical {\n  margin: var(--va-divider-inset-horizontal-margin) var(--va-divider-margin);\n}\n.va-divider::before, .va-divider::after {\n  content: "";\n  flex: 1;\n  border-top-width: var(--va-divider-line-width);\n  border-top-style: var(--va-divider-border-top-style);\n  border-top-color: var(--va-divider-border-top-color);\n}\n.va-divider--dashed::before, .va-divider--dashed::after {\n  border-top-style: var(--va-divider-dashed-border-top-style);\n}\n.va-divider--left::before {\n  flex: 0 var(--va-divider-text-horizontal-offset);\n}\n.va-divider--right::after {\n  flex: 0 var(--va-divider-text-horizontal-offset);\n}\n.va-divider__text {\n  font-size: var(--va-divider-text-font-size);\n  line-height: var(--va-divider-text-line-height);\n  height: var(--va-divider-text-height);\n  vertical-align: var(--va-divider-text-vertical-align);\n  transform: var(--va-divider-text-transform);\n}';
const prefixClass = "va-divider";
const _sfc_main = defineComponent({
  name: "VaDivider",
  props: {
    ...useComponentPresetProp,
    vertical: { type: Boolean, default: false },
    dashed: { type: Boolean, default: false },
    inset: { type: Boolean, default: false },
    orientation: {
      type: String,
      default: "center",
      validator: (value) => ["left", "right", "center"].includes(value)
    }
  },
  setup: (props, { slots }) => ({
    hasSlot: computed(() => !!slots.default),
    classComputed: computed(() => ({
      [`${prefixClass}--vertical`]: props.vertical,
      [`${prefixClass}--inset`]: props.inset,
      [`${prefixClass}--${props.orientation}`]: props.orientation && !props.vertical,
      [`${prefixClass}--dashed`]: props.dashed
    }))
  })
});
const _hoisted_1 = ["aria-orientation"];
const _hoisted_2 = {
  key: 0,
  class: "va-divider__text"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    role: "separator",
    class: normalizeClass(["va-divider", _ctx.classComputed]),
    "aria-orientation": _ctx.vertical ? "vertical" : "horizontal"
  }, [
    _ctx.hasSlot && !_ctx.vertical ? (openBlock(), createElementBlock("div", _hoisted_2, [
      renderSlot(_ctx.$slots, "default")
    ])) : createCommentVNode("", true)
  ], 10, _hoisted_1);
}
var _VaDivider = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [_style_0]]]);
export { _VaDivider as _ };
//# sourceMappingURL=VaDivider.js.map

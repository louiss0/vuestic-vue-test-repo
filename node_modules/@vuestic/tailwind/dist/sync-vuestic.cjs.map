{"version":3,"file":"sync-vuestic.cjs","sources":["../sync-vuestic.ts"],"sourcesContent":["import {\n  convertValueToString,\n  tailwindConfigPath,\n  tailwindConfigFilename,\n  defaultTailwindConfigFilename,\n} from './helpers/helpers'\nimport { convertVuesticThresholds } from './modules/breakpoint'\nimport { convertVuesticColors } from './modules/colors'\n\nconst fs = require('fs')\n\nconst defaultTailwindConfig = {\n  content: [],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n\n/**\n * @description writes tailwind config to the file\n * @param config tailwind config in raw string format\n */\nconst updateTailwindConfig = (config?: string) => {\n  try {\n    const tailwindConfig = `module.exports = ${config ?? convertValueToString(defaultTailwindConfig)}`\n\n    fs.writeFileSync(tailwindConfigFilename || defaultTailwindConfigFilename, tailwindConfig)\n\n    console.log(`${tailwindConfigFilename || defaultTailwindConfigFilename} was successfully synchronized with Vuestic UI config!`)\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * @description forming tailwind config file from vuestic default presets\n */\nconst integrateVuesticConfig = async () => {\n    if (!tailwindConfigPath) { console.log('Tailwind CSS config file not found. Proceeding with default config.') }\n    const tailwindConfig = tailwindConfigPath ? (await (() => import(tailwindConfigPath))()).default : defaultTailwindConfig\n\n    tailwindConfig.theme ||= {}\n    tailwindConfig.theme.extend ||= {}\n    tailwindConfig.theme.extend.colors ||= {}\n    tailwindConfig.theme.extend.screens ||= {}\n\n    tailwindConfig.theme.extend.colors = convertVuesticColors(tailwindConfig)\n    tailwindConfig.theme.extend.screens = convertVuesticThresholds(tailwindConfig)\n\n    updateTailwindConfig(convertValueToString(tailwindConfig))\n  }\n\n;(async () => { await integrateVuesticConfig() })()\n"],"names":["fs","require","defaultTailwindConfig","content","theme","extend","plugins","integrateVuesticConfig","async","tailwindConfigPath","console","log","tailwindConfig","__vitePreload","default","_a","_b","colors","_c","screens","convertVuesticColors","convertVuesticThresholds","config","convertValueToString","writeFileSync","tailwindConfigFilename","defaultTailwindConfigFilename","e"],"mappings":"waASA,MAAMA,EAAKC,QAAQ,MAEbC,EAAwB,CAC5BC,QAAS,GACTC,MAAO,CACLC,OAAQ,IAEVC,QAAS,IAsBLC,uBAAyBC,oBACtBC,EAAAA,oBAAsBC,QAAQC,IAAI,uEACjC,MAAAC,EAAiBH,EAAAA,0BAAmCI,EAAAA,eAAA,KAAAJ,OAAAA,EAAAA,EAAAA,mBAAAA,QAAAA,UAAAA,MAAAA,WAAAA,OAAAA,kBAAAA,QAAAA,OAAAA,IAAAA,SAAA,IAA+BK,QAAUZ,EAEpFU,EAAAR,QAAAQ,EAAAR,MAAU,KACVW,EAAAH,EAAAR,OAAMC,SAAAU,EAAAV,OAAW,KACjBW,EAAAJ,EAAAR,MAAMC,QAAOY,SAAbD,EAAaC,OAAW,KACxBC,EAAAN,EAAAR,MAAMC,QAAOc,UAAbD,EAAaC,QAAY,IAExCP,EAAeR,MAAMC,OAAOY,OAASG,EAAAA,qBAAqBR,GAC1DA,EAAeR,MAAMC,OAAOc,QAAUE,EAAAA,yBAAyBT,GAzBtC,CAACU,IACxB,IACF,MAAMV,EAAiB,oBAA8BW,MAAVD,EAAUC,EAAAA,EAAAA,qBAAqBrB,KAEvEF,EAAAwB,cAAcC,EAAAA,wBAA0BC,EAAAA,8BAA+Bd,GAElEF,QAAAC,IAAI,GAAGc,EAAAA,wBAA0BC,EAAqFA,6FACvHC,GACPjB,QAAQC,IAAIgB,KAmBSJ,CAAAA,EAAAA,qBAAqBX,KAGhC,iBAAQL,0BAAR"}
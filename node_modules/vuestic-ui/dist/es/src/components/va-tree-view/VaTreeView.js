import { defineComponent, resolveComponent, openBlock, createElementBlock, renderSlot, Fragment, renderList, createBlock, createSlots, withCtx, normalizeProps, guardReactiveProps, createTextVNode } from "vue";
import { u as useTreeView } from "./hooks/useTreeView.js";
import { u as useTreeViewProps, a as useTreeViewEmits } from "./hooks/useTreeHelpers.js";
import { V as VaTreeNode } from "./components/VaTreeNode/index.js";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
var VaTreeView_vue_vue_type_style_index_0_lang = "";
const _sfc_main = defineComponent({
  name: "VaTreeView",
  props: { ...useTreeViewProps },
  emits: [...useTreeViewEmits],
  components: { VaTreeNode },
  setup: (props, { emit }) => {
    const { treeItems, getTrackBy } = useTreeView(props, emit);
    return { treeItems, getTrackBy };
  }
});
const _hoisted_1 = {
  class: "va-tree-view",
  role: "tree"
};
const _hoisted_2 = /* @__PURE__ */ createTextVNode("No matching nodes found");
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_tree_node = resolveComponent("va-tree-node");
  return openBlock(), createElementBlock("div", _hoisted_1, [
    _ctx.$props.filter && !_ctx.treeItems.length ? renderSlot(_ctx.$slots, "not-found", { key: 0 }, () => [
      _hoisted_2
    ]) : (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(_ctx.treeItems, (nodeItem) => {
      return openBlock(), createBlock(_component_va_tree_node, {
        key: _ctx.getTrackBy(nodeItem),
        node: nodeItem
      }, createSlots({ _: 2 }, [
        renderList(_ctx.$slots, (_, name) => {
          return {
            name,
            fn: withCtx((slotScope) => [
              renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(slotScope)))
            ])
          };
        })
      ]), 1032, ["node"]);
    }), 128))
  ]);
}
var _VaTreeView = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaTreeView as _ };

import './VaTreeView.css';
//# sourceMappingURL=VaTreeView.js.map
